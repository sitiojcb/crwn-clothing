
---------------------------------------Section 4 ------------------------------------------------------------
--------------------------Master project - setting up E-COMMERCE
video 56 -- linkedin

If you are looking to improve your LinkedIn profile and have others endorse your skills, we have a private ZTM LinkedIn group here. LinkedIn allows you to have recruiters message you with lots of job opportunities. You can join the group by clicking on "LinkedIn Group" and then go ahead and endorse some of the member's skills (other people will do the same for you as they join).

If you have any questions, reach out in our private Discord chat community in the #job-hunting channel!

UPDATE!!! Zero to Mastery is officially a recognized school!

What does this mean for you? It means that you can add it as an educational institution on LinkedIn as part of your profile to wow those employers (as your education history). Check it out here. To add it to your profile:

Step 1: Go to personal LinkedIn profile

Step 2: Scroll down to the Education section

Step 3: Click the +

Step 4: Type in Zero To Mastery Academy
----------------------------------------------------------------------------------------------------------------
video 57 -- the long road ahead 

para pagos usamos la api de Stripe 
login con cuenta de google 
firebase 
---------------------------------------------------------------------------------------------------
video 58 -- project overview
---------------------------------------------------------------------------------------------------
video 59 -- github project repo

github.com/ZhangMYihua 
ver lessonNum.. por si tengo problemas 

git clone https://github.com/ZhangMYihua/lesson-1.git nombreCarpeta
npm install 

luego de trabajar en el proyecto supongamos lo quiero subir a mi repo personal...
git remote veo sale origin
git remote remove origin 
me logeo en mi cuenta de github creo una repo para este proyecto
git remote add origin https://github...mirepo 

---------------------------------------------------------------------------------------------
 If you wish to make commits and push code up after cloning down from any of the GitHub links, you should actually fork the project first. The reason for this is because the GitHub project links provided are pointing to repositories you do not own, in order to own the repository, you have to fork it so you get a copy of the project in your own GitHub account that you do own!

 ----------------------------------------------------------------------------------------------------------
 video 62 -- e commerce homepage + sass 
 
 recordar usar powershell como administrador para no tener permiso de escritura en Datos/

 npx create-react-app crwn-clothing

en el proyecto usamos sass:
 https://www.npmjs.com/package/node-sass

 npm install node-sass
(en caso de necesitar borrar usa rm -rf .... o rm -rf node_modules)

 
npm install 

creamos src/homepage.styles.scss (descargue los estilos )

creamos src/homepage.component.jsx (importo sass)
se trata de un functional component porque no vamos a necesitar state o life cycle

quitamos de index.js
serviceWorker.unregister();
y el header de App.js 
borramos contenido de App.css

git remote add origin https://github.com/sitiojcb/crwn-clothing.git

git remote add origin git@github.com:sitiojcb/crwn-clothing.git
git status 

git add -A 

git commit -m"created project with react and added files for homepage" 
git push origin master 

---------------------------------------------------------------------------------
video 63 -- project files + Modules 

comenta que en versiones anteriores jest (para testeo) causaba errores.
ahora lo han quitado 

------------------------------------------------------------------------------------
video 64 -- project component architecture 

comenta usar react extension para Chrome
esta extension se actualizo ,  no lo voy a ver como en el video 
debo buscar: components y profiler 

pregunta: export default vs const...
resp:
export const is named export, this is how you import it

import {abc} from 'abc'
--------
export default is unnamed export, this is how import it

import anyname from 'abc'
------------------------------------------------------------------------------------
video 65 -- css y scss 
comenta lo van a proporcionar ellos.
-----------------------------------------------------------------------------------
video 66 -- homepage and directory components 

crea carpetas:
components componentes reusables
pages paginas

muevo homepage.components.jsx y actualizo en App.js 
para menu-items.component usamos functional component 
const MenuItem = () => (
    uso parentesis para evitar escribir return {}
)
------------
comenta que en lugar de pasarle props como parametro y luego usar props.title 
simplemente uso destructure con {title}

comenta que directory.component necesito sea class component porque necesito guardar el state de los menu-items

comenta que en react podemos pasar los estilos con 
    backgroundImage: `url(${imageUrl})`
    }}>
    aca imageUrl viene como prop 

ver mas template literals 
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals
------------------------------------------------------------------------------------
video 67 -- styling menu-items 

cubic bezier 
https://developer.mozilla.org/en-US/docs/Web/CSS/easing-function

google font source open sans condensed 
https://fonts.google.com/?query=open+sans+condensed&selection.family=Open+Sans+Condensed:wght@300&sidebar.open=true

en public/ index.html agregamos:
<link href="https://fonts.googleapis.com/css2?family=Open+Sans+Condensed:wght@300&display=swap" rel="stylesheet">
luego en App.css en el body agrego:
font-family: 'Open Sans Condensed', sans-serif;

-----
git add .
git commit -m "broken homepage into small comp and style menu-item comp"
git push origin master 
-----------------------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------Section 5 ------------------------------------------------------------------------
----------------------------------------------------React router and routing -------------------------------------------------------------------
video 68 -- routing in react 

se usa paquete react route 
comenta que esta libreria usa algo provisto por el navegador llamado history api 
--------
Earlier, in single page application, there is an issue of navigation, we can't back and forth as there are no other link or pages, but with react router, which makes the  use of history API provided by browser, which allows single page application to go back and forth without any issues. 
-----------------------------------------------------------------------------------------------------------------------------------------------------
video 69 -- routing in our project 

react router documentation 
https://reactrouter.com/web/guides/quick-start

react router dom 
https://www.npmjs.com/package/react-router-dom

npm install --save react-router-dom

sirve para cuando tengo varias paginas. hay otras librerias pero esta es la mas popular.

nota: ver que en el video resuelve problema creado en  la instalacion con una version de jest ... yo no lo tuve porque instale versiones compatibles mas nuevas 
---------------
para usar react dom necesito importarlo en index.js 
import { BrowserRouter } from "react-router-dom";

BrowserRouter es un componente. por eso lo coloca envolviendo al otro.

y en App.js 
lo importo y cambio <HomePage /> por 
  <Route exact path='/' component={HomePage} />

component por el componente que quiero renderizar 
path='/' cuando visito / significa vemos el componente HomePage
exact por defecto es true, significa que si paso / debe ser exacto 

luego usa Switch que se supone ayuda ya que renderiza lo primero que encuentra en el path 
da ej de '/' y de '/hats' hay entonces mas de una ruta, con switch al encontrar / renderiza eso y nada mas.
sostiene que ayuda a que no se rendericen varios componentes/rutas por accidente 

lo usa sin exact o exact='false' 

mas info switch:
https://dev.to/danhjoo7/using-a-switch-component-in-react-router-d2k
--------------------------------------------------------------------------------------
video 70 -- react router dom 

demo:
A small app bootstrapped with CRA to explain basics of react-routing

https://github.com/ZhangMYihua/react-router-demo


-------------------------------------------------------------------------------------
video 71 -- withRouter() 

Higher order components 
https://reactjs.org/docs/higher-order-components.html

Concretely, a higher-order component is a function that 
takes a component and returns a new component.

comenta que el problema de usar history en el router es que debo pasar como props a los childrens... se va haciendo engorroso.
(lo llaman tambien prop drilling es cuando se pasan todas esas props en este caso history a traves de los childrens.)

otra solucion es usar Higher order component {withRouter}
por eso importo en menu-item.component
import { withRouter } from 'react-router-dom';
luego exporto 
export default withRouter(MenuItem);
y ahora el componente MenuItem tiene acceso a location/match que necesitamos para el link

----
en directory.component cambio
{this.state.sections.map(({title, imageUrl, id, size}) => (
<MenuItem key={id} title={title} imageUrl={imageUrl} size={size} />
 ))}
 por 
  {this.state.sections.map(({ id, ...otherSectionProps }) => (
  <MenuItem key={id} {...otherSectionProps} />
  ))}
  ya que comenta que en lugar de agregar por ej linkUrl usamos la ventaja de js6 con destructuring ... 
  git add .
  git commit -m "update withRouter HOC"
  git push origin master 

--------------------------------------------------------------------------------------
------------------------------Section 6 -----------------------------------------------
---------------------------Form components ------------------------------------------
video 72 -- shoping data 
descargo fotos o uso const shop 

---------------------------------------------------------------------------------------
video 73 -- shop page 

creo shop folder dentro de pages y coloco shop.component.jsx 
creo components/collection-preview y collection-preview.component.jsx 
-------------------------------------------------------------------------------
video 74 -- collection item 

creo collection-item y collection-item.component.jsx
luego en collection-preview.component 
lo importo y cambio 
<div key={item.id}>{item.name}</div>
por 
 items.filter((item,idx) => idx<4 ).map((id, ...otherItemProps) => (
  <CollectionItem key={id} {...otherItemProps} />
))

git status 
git add -A 
git commit -m "update collection-preview collection-item"
git push origin master 
-------------------------------------------------------------------------
video 75 -- header component

creamos header 
y assets /crown.svg 
ver que para importar svg has sintaxis especial en react !!
import {ReactComponent as Logo} from ..
luego usamos como <Logo> 
--
comenta que para que el header este presente lo colocamos por encima del switch 
 <Header />

 -----------
 pregunta:
 cuando sigo el link del navegador puedo ir a la pag sin problema, pero si coloco la url directamente no, voy a 404 por que?

 resp:
 https://stackoverflow.com/questions/11577147/how-to-fix-http-404-on-github-pages

pregunta:
Why didn't we use <img src="..svg path"> instead of importing it as a component?
resp:
both methods work, use whatever you like
---
problemas usando otro logo comentan usar:
<Logo className='logo'  height="60px" width="60px"/>
mas logos svg en 
https://www.flaticon.com/free-icon/dollar_3037150?term=price&page=1&position=53


git status 
git add -A 
git commit -m "adding header" 
git push origin master 

------------------------------------------------------------------
video 76 -- importing svg in react
import { ReactComponent as Logo }

This is a new special syntax when importing SVG in React. The ReactComponent import name is special and tells Create React App that you want a React component that renders an SVG, rather than its filename. You can read more about it here, but keep in mind that this is a React library special syntax:

https://facebook.github.io/create-react-app/docs/adding-images-fonts-and-files

--------------------------------------------------------------------------------------
video 77 -- forms in react 

https://developer.mozilla.org/en-US/docs/Learn/Forms/Your_first_form

eventPreventDefault()
https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault

vamos a ver user authentication 
comenta que como tenemos por ej botones que se repiten en un formulario.. vamos a hacer un componente reusable.
cada componente sign in y register van a tener cada uno su propio state.
comenta que no hace falta compartir entre ambos por eso no necesita colocar el state en la pagina por encima de estos componentes.
comenta que como regla conviene tener el state en el nivel mas bajo posible 
--------------------------------------------------------------------------------------
video 78 -- sign in component 
creo dentro de pages sign-in-and-sign-up
y dentro sign-in-and-sign-up.component.jsx 
---
luego en components creo sign-in/sign-in.component 
comenta que 
 this.setState({ [name] : value}) aca [name] va a ser email y luego password.

 pregunta mia:
 porque usamos required !! no hay algo nativo en react para chequear errores?
 y sanitizar las entradas? 
 ---------------------------------------------------------------------------------------
 video 79 -- form input component 

 creo components/form-input/form-input.component.jsx
comenta 
const FormInput = ({ handleChange, label, ...otherProps }) 
necesito handleChange porque bubbleUp any onChange that input have 
-colocamos el label y el input juntos en un div group 
-necesito el label como prop para usarlo selectivamente 

 comenta:
   (<label className={`${otherProps.value.length ? 'shrink' : ''}`} form-input-label>{label}</label>) 
   siempre vamos a tener clase form-input-label pero cuando el usuario agrega o tipea algo vamos a ver que agrega clase shrink 

importamos FormInput en sign-in.component y cambio
<form onSubmit={this.handleSubmit}>
<input name="email" type="email"
por 
<form onSubmit={this.handleSubmit}>
<FormInput name="email" type="email"
--
tambien cambio:
 onChange={this.handleChange}
 por 
 handleChange 
 agrego ademas label="email" y quito el 
 <label>Email</label>

-------------------------------------------------------------------------------------
video 80 -- custom button 

creo custom-button/custom-button.component.jsx 
luego cambio en sign-in.component.jsx
<input type="submit"  value="Submit Form" />
por 
<CustomButton type="submit">
Sign In
</CustomButton>
-------------------------------------------------------------------------------------
---------------------------------Section 7 ------------------------------------------
------------------------Firebase + User authentication ------------------------------
video 81 -- overview 

necesitamos guardar la info recibida en una base de datos 
vamos a usar firebase 
---------------------------------------------------------------------------------------
video 82 -- firebase intro 

https://firebase.google.com/

backend:
1 server 
2 database 
3 authentication 
----------
hasta ahora usamos shop.data.js para la info pero es a modo de ejemplo.
en la realidad necesitamos una base de datos.


pregunta: mongodb vs firebase ?
resp: parece que firebase resuelve mas que solo database... 
----------------------------------------------------------------------------------------
video 83 -- adding a project to firebase 

https://www.npmjs.com/package/firebase

me logeo en 
https://firebase.google.com/
go to console 
add project (lo nombro crwn-db)
--creo app asociado con webjcb para google analytics

una vez creado nos lleva al dashboard 
sobre el sidebar vemos diferentes planes 
usamos el free -- spark
----
vemos tambien en el sidebar el sector Develop 
nos interesan authentication y database 
comenta que storage es para videos/imagenes assets en general 
-----------
desde la ventana principal vemos el icono </> que es el de web !!

me pide registrar app con un nickname...usamos el mismo crwn-db 
comenta que no necesitmos la parte de hosting 
---
me da el sdk:
<!-- The core Firebase JS SDK is always required and must be listed first -->
<script src="https://www.gstatic.com/firebasejs/7.19.0/firebase-app.js"></script>

<!-- TODO: Add SDKs for Firebase products that you want to use
     https://firebase.google.com/docs/web/setup#available-libraries -->
<script src="https://www.gstatic.com/firebasejs/7.19.0/firebase-analytics.js"></script>

<script>
  // Your web app's Firebase configuration
  var firebaseConfig = {
    apiKey: "AIzaSyCq_FqyhvOMizfVEbDMykbbe69NL71Ynd4",
    authDomain: "crwn-db-79248.firebaseapp.com",
    databaseURL: "https://crwn-db-79248.firebaseio.com",
    projectId: "crwn-db-79248",
    storageBucket: "crwn-db-79248.appspot.com",
    messagingSenderId: "732625627403",
    appId: "1:732625627403:web:58576922fff33f87271a0e",
    measurementId: "G-B2VZW0YJY0"
  };
  // Initialize Firebase
  firebase.initializeApp(firebaseConfig);
  firebase.analytics();
</script>
---------------------------------------------------------
instalo firebase en mi proyecto:

npm install --save firebase
-----------------------------------------------------------------------------------------
video 84 -- note about github 

In the upcoming lessons, we will be adding firebase to our React application. One thing to note is that we will be adding a config object that we get from firebase into our files, and in that config object is an API key. Typically it is good practice not to expose your API key publicly, but in the case of firebase, we have to do so because this is how firebase knows the application is ours! This is perfectly safe, and the intended purpose of this public API key. If you commit your code to Github, you may get a warning from GitGuardian having caught a google key, but GitGuardian has acknowledged that this is not an issue here!

https://twitter.com/search?q=firebase%20api%20key%20gitguardian&src=typd

How we secure our data is actually done with security rules in the firebase dashboard, but we will cover that in a later lesson! So please continue the course without worry :)

---------------------------------------------------------------------------------
video 85 -- google sign in authentication 

https://firebase.google.com/docs/reference/js/

creamos carpeta firebase 
y firebase.utils.js 
comenta que al importar 
import firebase from 'firebase/app'
import 'firebase/firestore'
import 'firebase/auth'

necesito importar firebase como base pero como es muy grande luego tomo solo lo que necesito, en este  caso firestore y auth 

cuando termina de editar firebase.utils.js 
necesito decirle a google me permita usar google auth 
volvemos a firebase 
Develop/authentication --> set-up-sign-in method 
--habilito google 
project-732625627403
--seleccione email 
maildecali@gmail.com
----------------------
luego vamos a sign-in.component y agrego 
import {signInWithGoogle} from '../../firebase/firebase.utils'
y
<CustomButton onClick={signInWithGoogle}>
Sign In with Google
</CustomButton>
----------------------------------------------------------------------------------------
video 86 -- cloning from this point on 

An important thing to note about any GitHub links that you fork and clone from this point forward is that you must replace the config  in firebase.utils.js  with your own config object in the firebase project overview that we learned in the last lesson. The config object is how firebase knows that your application is connected to your firebase account and database!
-------------------------------------------------------------------------------------
video 87 -- signin with google II 

necesito que mi app sepa cuando alguien se ha logeado con exito 
en App.js 
import {auth} from './firebase/firebase.utils'
y convertimos functional component en class component 
function App() { ahora va a ser 
class App extends React.Component {
  gracias a esto tenemos ahora acceso al estado.

  comenta que con firebase obtenemos user authentication session persistance 

  vemos en app como modifica para ver el estado y chequear si esta logeado o no 

-------------------------------------------------------------------------------------
video 84 -- how to fix 403 - restricted_client error 

It's possible you may encounter a google Authorization error that says 403:restricted_client. 
If you do, here are the instructions to fix it!

There should be a Learn More link in the popup, clicking that should take you to the Google APIs console that has three tabs under the header named Credentials, OAuth Consent Screen, and Domain Verification. 
Go to the OAuth Consent Screen tab and update the Application Name to 
"crwn-clothing" or any other name you're comfortable with 
(i.e. the name of your project). 
Click on save at the bottom, then try logging into your verified Google account thereafter.

Thanks to Dylan Flohrschutz for the instructions and solution!

-------------------------------------------------------------------------------------
video   89 -- google authentication III 

https://www.w3schools.com/cssref/css3_pr_box-sizing.asp

vemos que cuando el usuario esta logeado tenemos que darle opcion de salir 
debemos agregar sign out en el nav 
para saber el estado agrega a <Header>
 <Header currentUser={this.state.currentUser} />
 luego en header.component 
 importo auth y en el componente agrega
  {currentUser 
        ? 
        <div className='option' onClick={() => auth.signOut()}>Sign Out </div> 
        : 
        <Link className='option' to='/signin'>Sign In</Link>}
  es decir si esta logeado le da el boton de logout sino tiene el de signin 

luego en el custom button 
agrego prop isGoogleSignIn 
 <button className={`${isGoogleSignIn ? 'google-sign-in' : ''} 'custom-button'`}

 
--------------------------------------------------------------------------------------


